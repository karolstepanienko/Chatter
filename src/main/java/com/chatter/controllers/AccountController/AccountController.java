package com.chatter.controllers.AccountController;


// Spring-boot imports:
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
// import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
// import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.ui.Model;

// Project imports:
import com.chatter.classes.User.User;
import com.chatter.repositories.UserRepository;

@RestController
@RequestMapping("/api/account")
public class AccountController {

  private AccountControllerLogic acLogic;
  AccountController() {
    acLogic = new AccountControllerLogic();
  }

  // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  @Autowired  
  private UserRepository userRepository;

  @CrossOrigin()
  @PostMapping("/register/check/login")
  public boolean checkUserLoginAvailable(@RequestBody User user) {
    return this.acLogic.checkUserLoginAvailable(user, userRepository);
  }

  @GetMapping("/register")
  public String registerForm(Model model) {
    model.addAttribute("register_user", new User());
    return "account/register";
  }

  @PostMapping("/register")
  public String registerSubmit(@ModelAttribute User user, Model model) {
    model.addAttribute("register_user", user);
    // Saves user in db
    userRepository.save(user);
    // Returns the result view
    // Add @ ResponseBody before fuction return type to return String
    return "account/register_result";
  }

  @GetMapping("/delete")
  public String deleteForm(Model model) {
    model.addAttribute("account_delete", new User());
    return "account/delete";
  }

  @PostMapping("/delete")
  public String deleteAccount(@ModelAttribute User user, Model model) {
    model.addAttribute("account_delete", user);
    // Finds the user ID and deletes the user
    acLogic.deleteUser(user, userRepository);
    return "account/delete_result";
  }

  // @PostMapping(path="/add") // Map ONLY POST Requests
  // public @ResponseBody String addNewUser (@RequestParam String name, @RequestParam String email) {
  //   // @ResponseBody means the returned String is the response, not a view name
  //   // @RequestParam means it is a parameter from the GET or POST request

  //   User n = new User();
  //   n.setName(name);
  //   n.setEmail(email);
  //   userRepository.save(n);
  //   return "Saved";
  // }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}