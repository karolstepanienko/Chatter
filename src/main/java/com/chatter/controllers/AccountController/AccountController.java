package com.chatter.controllers.AccountController;

// Spring-boot imports:
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
// import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
// import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.ui.Model;

// Project imports:
import com.chatter.classes.User.User;
import com.chatter.repositories.UserRepository;
import com.chatter.classes.Change;

@RestController
@RequestMapping("/api/account")
public class AccountController {

  private AccountControllerLogic acLogic;
  AccountController() {
    acLogic = new AccountControllerLogic();
  }

  // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  @Autowired  
  private UserRepository userRepository;

  @CrossOrigin()
  @PostMapping("/register/check/login")
  public boolean checkUserLoginAvailable(@RequestBody User user) {
    return this.acLogic.checkUserLoginAvailable(user, userRepository);
  }

  @CrossOrigin()
  @PostMapping("/register/check/email")
  public boolean checkUserEmailAvailable(@RequestBody User user) {
    return this.acLogic.checkUserEmailAvailable(user, userRepository);
  }

  @CrossOrigin
  @PostMapping("register/add/user")
  public void addUser(@RequestBody User user) {
    System.out.println(user.toString());
    System.out.println(this.acLogic.checkUserLoginAvailable(user, userRepository));
    System.out.println(this.acLogic.checkUserEmailAvailable(user, userRepository));
    userRepository.save(user);
  }

  ////
  @GetMapping("/register")
  public String registerForm(Model model) {
    model.addAttribute("register_user", new User());
    return "account/register";
  }

  @PostMapping("/register")
  public String registerSubmit(@ModelAttribute User user, Model model) {
    model.addAttribute("register_user", user);
    // Saves user in db
    userRepository.save(user);
    // Returns the result view
    // Add @ ResponseBody before fuction return type to return String
    return "account/register_result";
  }

  @GetMapping("/delete")
  public String deleteForm(Model model) {
    model.addAttribute("account_delete", new User());
    return "account/delete";
  }

  @PostMapping("/delete")
  public String deleteAccount(@ModelAttribute User user, Model model) {
    model.addAttribute("account_delete", user);
    // Finds the user ID and deletes the user
    acLogic.deleteUser(user, userRepository);
    return "account/delete_result";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<User> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }

  @GetMapping("/getlogin")
  @ResponseBody
  public String getLoginwithid(@RequestParam Integer id) {
    return userRepository.getUserWithId(id).getLogin();
  }

  @PostMapping(value = "/changelogin", consumes = "application/json", produces = "application/json")
  public String changeLogin(@RequestBody Change change) {
    userRepository.changeLogin(change.id, change.login);
    return "account/changelogin";
  }
}